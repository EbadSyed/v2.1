/*
*********************************************************************************************************
*                                             EXAMPLE CODE
*********************************************************************************************************
* Licensing terms:
*   This file is provided as an example on how to use Micrium products. It has not necessarily been
*   tested under every possible condition and is only offered as a reference, without any guarantee.
*
*   Please feel free to use any application code labeled as 'EXAMPLE CODE' in your application products.
*   Example code may be used as is, in whole or in part, or may be used as a reference only. This file
*   can be modified as required.
*
*   You can find user manuals, API references, release notes and more at: https://doc.micrium.com
*
*   You can contact us at: http://www.micrium.com
*
*   Please help us continue to provide the Embedded community with the finest software available.
*
*   Your honesty is greatly appreciated.
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*
*                                         FILE SYSTEM EXAMPLE
*
* File : ex_fs_utils.h
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*********************************************************************************************************
*                                               MODULE
*********************************************************************************************************
*********************************************************************************************************
*/

#ifndef  _EX_FS_UTILS_H_
#define  _EX_FS_UTILS_H_

#include  <rtos_description.h>

#ifdef  RTOS_MODULE_FS_AVAIL


/*
*********************************************************************************************************
*********************************************************************************************************
*                                            INCLUDE FILES
*********************************************************************************************************
*********************************************************************************************************
*/

#include  <rtos/fs/include/fs_media.h>
#include  <rtos/fs/include/fs_core_vol.h>


/*
*********************************************************************************************************
*********************************************************************************************************
*                                               EXTERNS
*********************************************************************************************************
*********************************************************************************************************
*/

#ifdef   EX_FS_MODULE
#define  EX_FS_EXT
#else
#define  EX_FS_EXT  extern
#endif


/*
*********************************************************************************************************
*********************************************************************************************************
*                                               DEFINES
*********************************************************************************************************
*********************************************************************************************************
*/

#define  EX_FS_MAX_PATH_NAME_LEN            (50u)


/*
*********************************************************************************************************
*********************************************************************************************************
*                                             DATA TYPES
*********************************************************************************************************
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*********************************************************************************************************
*                                          GLOBAL VARIABLES
*********************************************************************************************************
*********************************************************************************************************
*/

EX_FS_EXT  MEM_SEG  Ex_FS_MemSeg;                               /* Control structure to access memory segment...        */
                                                                /* ...available to all examples.                        */


/*
*********************************************************************************************************
*********************************************************************************************************
*                                         FUNCTION PROTOTYPES
*********************************************************************************************************
*********************************************************************************************************
*/

FS_VOL_HANDLE  Ex_FS_VolOpen      (FS_MEDIA_HANDLE   media_handle,
                                   CPU_CHAR         *p_vol_name,
                                   RTOS_ERR         *p_err);

void           Ex_FS_VolClose     (FS_VOL_HANDLE     vol_handle,
                                   RTOS_ERR         *p_err);

void           Ex_FS_BufFill      (CPU_INT08U       *p_buf,
                                   CPU_SIZE_T        buf_size,
                                   CPU_INT08U        pattern_start);

CPU_BOOLEAN    Ex_FS_BufValidate  (CPU_INT08U       *p_buf,
                                   CPU_SIZE_T        buf_size,
                                   CPU_INT08U        pattern_start);

void           Ex_FS_FileRdWr_Exec(FS_VOL_HANDLE     vol_handle,
                                   CPU_CHAR         *p_file_name,
                                   CPU_INT32U        file_size,
                                   RTOS_ERR         *p_err);


/*
*********************************************************************************************************
*********************************************************************************************************
*                                        CONFIGURATION ERRORS
*********************************************************************************************************
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*********************************************************************************************************
*                                             MODULE END
*********************************************************************************************************
*********************************************************************************************************
*/

#endif  /* RTOS_MODULE_FS_AVAIL */
#endif
